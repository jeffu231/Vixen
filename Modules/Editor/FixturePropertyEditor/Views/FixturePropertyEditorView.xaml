<catel:UserControl x:Class="VixenModules.Editor.FixturePropertyEditor.Views.FixturePropertyEditorView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"        
        xmlns:catel="http://schemas.catelproject.com"
	    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	    xmlns:views="clr-namespace:VixenModules.Editor.FixturePropertyEditor.Views"	    
	    xmlns:common="clr-namespace:Common.WPFCommon.Converters;assembly=WPFCommon"
        mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/WPFCommon;component/Theme/Theme.xaml"/>
                <ResourceDictionary Source="/DataGridThemes;component/ExpressionDark.xaml" />
            </ResourceDictionary.MergedDictionaries>
			<common:InverseBooleanConverter x:Key="InverseBoolConverter" />
			<BooleanToVisibilityConverter x:Key="BoolToVis"/>
			<views:EnumDescriptionConverter x:Key="enumConverter" />
		</ResourceDictionary>
	</UserControl.Resources>

	<!--
	<i:Interaction.Behaviors>
		<catel:KeyPressToCommand Command="{Binding DeleteShapeOrPointsCommand}" Key="Delete" />
	</i:Interaction.Behaviors>
	-->


	<Grid Background="#444444">

		<Grid.RowDefinitions>
			<RowDefinition Height = "40" />
			<!--<RowDefinition Height = "30" /> 
            <RowDefinition Height = "40" /> -->
            <RowDefinition Height = "*" />
            <RowDefinition Height = "50" />
        </Grid.RowDefinitions>

		<!--DockPanel LastChildFill="True" Background="#444444">-->

		<!--
		<Grid Margin="15">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			-->

		<!--
			<Label Name="lblQuestion" Grid.Row="1" Grid.Column="1">Supported Ranges:</Label>
			<ListBox Grid.Row="2" Grid.ColumnSpan="2" Height="340" ItemsSource="{Binding RangeItems}" Background="#444444">
				<ListBox.ItemTemplate>
					<DataTemplate>
						<ListBoxItem IsSelected="{Binding IsChecked}">
							<CheckBox IsChecked="{Binding IsChecked}" Content="{Binding Path=Name}" />
						</ListBoxItem>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>
		Height="65"  Width="150" Margin="10,10,10,10"
		 HorizontalAlignment="Left" VerticalAlignment="Center" 
			-->
		<WrapPanel Grid.Row="0">
			<Label Content="Fixture Specification Name:" Margin="10, 10, 5, 0"></Label>
			<TextBox HorizontalAlignment="Stretch" Margin="5, 10, 10, 0" Text="{Binding Path=Name}"></TextBox>
			<Button Content="Load Specification"  Command="{Binding Path=LoadSpecificationCommand}" 
                IsDefault="True" Style="{StaticResource RowButtonStyle}" />
            <Button Content="Save Specification"  Command="{Binding Path=SaveSpecificationCommand}" 
                IsDefault="True" Style="{StaticResource RowButtonStyle}"/>
        </WrapPanel>


        <DockPanel Grid.Row="1">
        <!--
		<CheckBox Grid.Row="1" Margin="10,2,2,2">Translate Color Into Color Wheel</CheckBox>
		<CheckBox Grid.Row="2" Margin="10,2,2,2">Translate Color Intensity into Dimmer</CheckBox>
        -->

            <DataGrid Name="pointDataGrid" AutoGenerateColumns="False" ItemsSource="{Binding Items}" Margin="10,10,10,0" 
				          RowHeaderWidth="0"   Background="#444444" CanUserAddRows="False"
                 SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay}" 
                 EnableRowVirtualization="False" DockPanel.Dock = "Top" VerticalAlignment='Top'
                  SelectionChanged="SelectionChanged">
               


			<!--IsReadOnly="{Binding Data.SelectedPointsReadOnly, Source={StaticResource proxy}}" -->
			<!--
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="CurrentCellChanged">
						<i:InvokeCommandAction Command="{Binding Data.CurrentCellChangedCommand, Source={StaticResource proxy}}"/>
					</i:EventTrigger>
					<i:EventTrigger EventName="CellEditEnding">
						<i:InvokeCommandAction Command="{Binding Data.CellEditEndingCommand, Source={StaticResource proxy}}"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
				-->

			<DataGrid.Columns>

				<DataGridTemplateColumn  Header="Channel #" Width="65" >
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<ComboBox ItemsSource="{Binding ChannelNumbers}" 
							          SelectedItem="{Binding Path=ChannelNumber, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<!--
					<DataGridTemplateColumn Header="Channel" Width="50" IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ChannelNumber}">
                                <TextBlock.Style>
                                    <Style>
                                        <Setter Property="TextBlock.Foreground" Value="{StaticResource ForeColorBrush}"/>
                                        <Setter Property="TextBlock.Background" Value="{StaticResource BackColorBrush}"/>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
				-->


                <DataGridTemplateColumn Header="Name" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}">
                                <TextBlock.Style>
                                    <Style>
                                        <Setter Property="TextBlock.Foreground" Value="{StaticResource ForeColorBrush}"/>
                                        <Setter Property="TextBlock.Background" Value="{StaticResource BackColorBrush}"/>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>


<!--
                <DataGridTemplateColumn  Header="Type" Width="100" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding Source= Funcionts}" 
                                SelectedItem="{Binding Path= Functions, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                -->

                    <DataGridTemplateColumn  Header="Type" Width="180" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding Functions}" 
                                SelectedItem="{Binding Path=Function, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

				<!--
                    <DataGridComboBoxColumn Header="Function" SelectedItemBinding="{Binding Function}" Width="150">
					<DataGridComboBoxColumn.ElementStyle>
						<Style TargetType="{x:Type ComboBox}">
							<Setter Property="ItemsSource" Value="{Binding Functions}" />
							<Setter Property="Foreground" Value="Black"/>
						</Style>
					</DataGridComboBoxColumn.ElementStyle>
					<DataGridComboBoxColumn.EditingElementStyle>
						<Style TargetType="{x:Type ComboBox}">
							<Setter Property="ItemsSource" Value="{Binding Functions}" />
							<Setter Property="Foreground" Value="Black"/>
						</Style>
					</DataGridComboBoxColumn.EditingElementStyle>
				</DataGridComboBoxColumn>
                -->
                

                <!--
				<DataGridTextColumn Header="Type" Width="75" IsReadOnly="True">
					<DataGridTextColumn.Binding>
						<Binding Path="FunctionType" Converter="{StaticResource enumConverter}">
						</Binding>
					</DataGridTextColumn.Binding>

					<DataGridTextColumn.ElementStyle>
						<Style TargetType="TextBlock">
							<Setter Property="Background" Value="DarkGray"></Setter>
						</Style>
					</DataGridTextColumn.ElementStyle>
				</DataGridTextColumn>
                -->

                <DataGridTemplateColumn Width="32">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Command="{Binding Path=EditFunctionsCommand}">
                                <Image Source="/Resources;component/cog_edit.png"/>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--
				<DataGridComboBoxColumn Header="Type" Width="75" SelectedItemBinding="{Binding FunctionType}" IsReadOnly="True">
					<DataGridComboBoxColumn.ElementStyle>
						<Style TargetType="{x:Type ComboBox}">
							<Setter Property="ItemsSource" Value="{Binding FunctionTypes}" />
							<Setter Property="Foreground" Value="Black"/>
							<Setter Property="Background" Value="DarkGray"></Setter>
						</Style>
					</DataGridComboBoxColumn.ElementStyle>
					<DataGridComboBoxColumn.EditingElementStyle>
						<Style TargetType="{x:Type ComboBox}">
							<Setter Property="ItemsSource" Value="{Binding FunctionTypes}" />
							<Setter Property="Foreground" Value="Black"/>
						</Style>
					</DataGridComboBoxColumn.EditingElementStyle>
				</DataGridComboBoxColumn>
				-->

			</DataGrid.Columns>
			<DataGrid.RowValidationErrorTemplate>
				<ControlTemplate>
					<Grid Margin="0,-2,0,-2"
					ToolTip="{Binding RelativeSource={RelativeSource
					FindAncestor, AncestorType={x:Type DataGridRow}},
					Path=(Validation.Errors)[0].ErrorContent}">
						<Ellipse StrokeThickness="0" Fill="Red" 
					Width="{TemplateBinding FontSize}" 
					Height="{TemplateBinding FontSize}" />
						<TextBlock Text="!" FontSize="{TemplateBinding FontSize}" 
					FontWeight="Bold" Foreground="White" 
					HorizontalAlignment="Center"  />
					</Grid>
				</ControlTemplate>
			</DataGrid.RowValidationErrorTemplate>
		</DataGrid>

        </DockPanel>

        <WrapPanel Margin="10,5,5,0" Grid.Row="2">
            <Button Name="Add" Width="40" Height="40" Margin="0,2,2,0" Command="{Binding AddCommand}">
                <Image Source="/Resources;component/Add.png"/>
            </Button>
            <Button Name="Remove" Width="40" Height="40" Margin="2,2,2,0" Command="{Binding DeleteCommand}">
                <Image Source="/Resources;component/Delete.png"></Image>
            </Button>
            <!--<Button Content="Edit Functions" Command="{Binding Path=EditFunctionsCommand}" Margin="2,2,2,2" IsDefault="False" Style="{StaticResource RowButtonStyle}"/> -->
        </WrapPanel>
    </Grid>
</catel:UserControl>
