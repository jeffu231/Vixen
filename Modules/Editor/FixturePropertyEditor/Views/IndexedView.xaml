<catel:UserControl x:Class="VixenModules.Editor.FixturePropertyEditor.Views.IndexedView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"        
        xmlns:catel="http://schemas.catelproject.com"
	    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	    xmlns:views="clr-namespace:VixenModules.Editor.FixturePropertyEditor.Views"	    
	    xmlns:common="clr-namespace:Common.WPFCommon.Converters;assembly=WPFCommon"
		xmlns:fixture="clr-namespace:VixenModules.App.Fixture;assembly=Fixture"			  
		xmlns:local="clr-namespace:VixenModules.Editor.FixturePropertyEditor.Views"			  
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:viewModel="clr-namespace:VixenModules.Editor.FixturePropertyEditor.ViewModels"		           
        mc:Ignorable="d">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/WPFCommon;component/Theme/Theme.xaml"/>
                <ResourceDictionary Source="/DataGridThemes;component/ExpressionDark.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<common:InverseBooleanConverter x:Key="InverseBoolConverter" />
			<BooleanToVisibilityConverter x:Key="BoolToVis"/>
            <!--
            <ObjectDataProvider x:Key="indexTypeEnum" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type Type="fixture:FixtureIndexType"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            -->

            <ControlTemplate x:Key="ErrorTemplate">
                <DockPanel LastChildFill="True">
                    <Border BorderBrush="Red" BorderThickness="1">
                        <AdornedElementPlaceholder />
                    </Border>
                </DockPanel>
            </ControlTemplate>

        </ResourceDictionary>
    </UserControl.Resources>

	<!--<DockPanel LastChildFill="false" Background="#444444"> -->

	<Grid Background="#444444">
			<Grid.RowDefinitions>
				<RowDefinition Height = "*" />
				<RowDefinition Height = "60" />
		</Grid.RowDefinitions>

        <DataGrid Name="pointDataGrid" AutoGenerateColumns="False" 
				  ItemsSource="{Binding Items}" 
				  SelectedItem="{Binding Path=SelectedItem, Mode=TwoWay}"
				  SelectionChanged="SelectionChanged"
				  Margin="5,5,5,5" 
				  RowHeaderWidth="0" 
				  Grid.Row="0" 
				  Grid.Column="1" 
				  CanUserAddRows="False"
                  VerticalAlignment="Top">
            <DataGrid.Columns>
            
                <!--
					<DataGridTextColumn Header="Name" Width="*">
						<DataGridTextColumn.Binding>
							<Binding Path="Name">
							</Binding>
						</DataGridTextColumn.Binding>
					</DataGridTextColumn>
				-->

                <DataGridTemplateColumn Header="Name" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}">
                                <TextBlock.Style>
                                    <Style>
                                        <Setter Property="TextBlock.Foreground" Value="{StaticResource ForeColorBrush}"/>
                                        <Setter Property="TextBlock.Background" Value="{StaticResource BackColorBrush}"/>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                    
                    

                </DataGridTemplateColumn>

				<!--
                <DataGridCheckBoxColumn Header="Use Curve" Binding="{Binding UseCurve, UpdateSourceTrigger=PropertyChanged}" Width="60" />
				-->

				<DataGridTemplateColumn Header="Use Curve" Width="60">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="{Binding Path=UseCurve, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

			<!--
            <DataGridTextColumn Header="Start Value" Width="60" Binding="{Binding StartValue, UpdateSourceTrigger=PropertyChanged}">
                </DataGridTextColumn>
            -->

            <DataGridTemplateColumn Header="Start Value" Width="65">                    
                    <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding StartValue}">
                            <TextBlock.Style>
                                <Style>
                                    <Setter Property="TextBlock.Foreground" Value="{StaticResource ForeColorBrush}"/>
                                    <Setter Property="TextBlock.Background" Value="{StaticResource BackColorBrush}"/>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
                <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox>
                                <TextBox.Text>
                                    <Binding Path="StartValue" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <viewModel:DMXValidationRule/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
            </DataGridTemplateColumn>

            <!--
            <DataGridTextColumn Header="End Value" Width="60" Binding="{Binding EndValue, UpdateSourceTrigger=PropertyChanged}">
                </DataGridTextColumn>
            -->

            <DataGridTemplateColumn Header="End Value" Width="65">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding EndValue}">
                            <TextBlock.Style>
                                <Style>
                                    <Setter Property="TextBlock.Foreground" Value="{StaticResource ForeColorBrush}"/>
                                    <Setter Property="TextBlock.Background" Value="{StaticResource BackColorBrush}"/>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox>
                                <TextBox.Text>
                                    <Binding Path="EndValue" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <viewModel:DMXValidationRule/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

            <!--
            <DataGridComboBoxColumn Header="Preview Tag" Width="120" SelectedItemBinding="{Binding Path=IndexType, UpdateSourceTrigger=PropertyChanged}">
				<DataGridComboBoxColumn.ElementStyle>
					<Style TargetType="{x:Type ComboBox}">
						<Setter Property="ItemsSource" Value="{Binding Source={local:EnumBindingSource {x:Type fixture:FixtureIndexType}}}" />
						<Setter Property="Foreground" Value="Black"/>
					</Style>
				</DataGridComboBoxColumn.ElementStyle>
                <DataGridComboBoxColumn.EditingElementStyle>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="ItemsSource" Value="{Binding Source={local:EnumBindingSource {x:Type fixture:FixtureIndexType}}}" />
                        <Setter Property="Foreground" Value="Black"/>
                    </Style>
                </DataGridComboBoxColumn.EditingElementStyle>
            </DataGridComboBoxColumn>
            -->

                <DataGridTemplateColumn  Header="Preview Type" Width="120" >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox ItemsSource="{Binding IndexTypes}" 
                         SelectedItem="{Binding Path=IndexType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
                    
                    <!--
				<DataGrid.RowValidationErrorTemplate>
					<ControlTemplate>
						<Grid Margin="0,-2,0,-2"
					ToolTip="{Binding RelativeSource={RelativeSource
					FindAncestor, AncestorType={x:Type DataGridRow}},
					Path=(Validation.Errors)[0].ErrorContent}">
							<Ellipse StrokeThickness="0" Fill="Red" 
					Width="{TemplateBinding FontSize}" 
					Height="{TemplateBinding FontSize}" />
							<TextBlock Text="!" FontSize="{TemplateBinding FontSize}" 
					FontWeight="Bold" Foreground="White" 
					HorizontalAlignment="Center"  />
						</Grid>
					</ControlTemplate>
				</DataGrid.RowValidationErrorTemplate>
            -->
                   
			</DataGrid>
                   
                   
		<WrapPanel Margin="5,0,0,0" Grid.Row="1" >
			<Button Name="Add" Width="40" Height="40" Command="{Binding AddCommand}"  Margin="0,2,2,2">
				<Image Source="/Resources;component/Add.png"></Image>
			</Button>
			<Button Name="Remove" Width="40" Height="40" Command="{Binding DeleteCommand}"  Margin="2,2,2,2">
				<Image Source="/Resources;component/Delete.png"></Image>
			</Button>
		</WrapPanel>
		
        <!--
		<WrapPanel Orientation="Horizontal" Style="{StaticResource RowButtonRightContainerStyle}" Grid.Row="1">
				<Button Content="Ok" Command="{Binding OkCommand}" IsDefault="True" Style="{StaticResource RowButtonStyle}"/>
				<Button Content="Cancel" Command="{Binding CancelCommand}" IsCancel="True" Style="{StaticResource RowButtonStyle}"/>
			</WrapPanel>
			-->
		</Grid>        
</catel:UserControl>
